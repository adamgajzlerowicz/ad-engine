{"version":3,"sources":["webpack://adEngine/webpack/bootstrap","webpack://adEngine/external \"@wikia/ad-engine\"","webpack://adEngine/external \"babel-runtime/core-js/object/keys\"","webpack://adEngine/external \"babel-runtime/helpers/createClass\"","webpack://adEngine/external \"babel-runtime/helpers/classCallCheck\"","webpack://adEngine/external \"babel-runtime/core-js/promise\"","webpack://adEngine/external \"babel-runtime/core-js/object/assign\"","webpack://adEngine/./src/ad-services/bill-the-lizard/executor.js","webpack://adEngine/./src/ad-services/bill-the-lizard/projects-handler.js","webpack://adEngine/./src/ad-services/bill-the-lizard/index.js","webpack://adEngine/./src/ad-services/krux/index.js","webpack://adEngine/./src/ad-services/index.js"],"names":["logGroup","Executor","methods","name","callback","utils","logger","methodName","model","prediction","Error","models","response","forEach","modelName","result","executableModel","find","executable","definedMethods","execute","ProjectsHandler","projects","projectNames","context","get","projectParameters","enabledProjectNames","filter","isEnabled","includes","parameters","isNextModelExecutable","isProperGeo","countries","push","events","registerEvent","buildQueryUrl","queryParameters","params","key","encodeURI","join","buildUrl","host","endpoint","query","httpRequest","timeout","request","window","XMLHttpRequest","url","emit","BILL_THE_LIZARD_REQUEST","open","responseType","resolve","reject","addEventListener","onreadystatechange","readyState","status","send","getQueryParameters","now","Date","day","getDay","map","h","getHours","dow","overridePredictions","newValue","queryString","parseInt","BillTheLizard","executor","projectsHandler","predictions","getEnabledModelsWithParams","length","NOT_USED","TOO_LATE","catch","error","message","TIMEOUT","FAILURE","then","parsePredictions","ON_TIME","executeMethods","targeting","definition","version","suffix","indexOf","dfp_targeting","set","billTheLizard","loadScript","firstScript","document","getElementsByTagName","kruxId","kruxScript","createElement","type","id","async","onload","src","parentNode","insertBefore","getKruxData","localStorage","navigator","cookieEnabled","match","cookie","decodeURI","Krux","args","q","exportPageParams","importUserData","value","user","segments","split","krux"],"mappings":"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","file":"ad-services.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@wikia/ad-engine\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"babel-runtime/core-js/object/assign\");","import { utils } from '@wikia/ad-engine';\n\nconst logGroup = 'executor';\n\n/**\n * Bill the Lizard methods executor\n */\nexport class Executor {\n\tconstructor() {\n\t\tthis.methods = {};\n\t}\n\n\t/**\n\t * Registeres new method\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tregister(name, callback) {\n\t\tutils.logger(logGroup, `method ${name} registered`);\n\t\tthis.methods[name] = callback;\n\t}\n\n\t/**\n\t * Executes method by name\n\t * @param {string} methodName\n\t * @param {ModelDefinition} model\n\t * @param {number|undefined} prediction\n\t */\n\texecute(methodName, model, prediction) {\n\t\tconst callback = this.methods[methodName];\n\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow Error(`${methodName} is not executable`);\n\t\t}\n\n\t\tutils.logger(logGroup, `executing ${methodName} method`, model.name, prediction);\n\t\tcallback(model, prediction);\n\t}\n\n\t/**\n\t * Executes all methods defined in given model based on service response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t */\n\texecuteMethods(models, response) {\n\t\tObject.keys(response).forEach((modelName) => {\n\t\t\tconst { result } = response[modelName];\n\n\t\t\tconst executableModel = models.find(model => model.name === modelName && model.executable);\n\t\t\tif (!executableModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst definedMethods = executableModel[`on_${result}`];\n\t\t\tif (!definedMethods) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdefinedMethods.forEach(methodName => this.execute(methodName, executableModel, result));\n\t\t});\n\t}\n}\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'project-handler';\n\n/**\n * Bill the Lizard projects handler\n */\nexport class ProjectsHandler {\n\tconstructor() {\n\t\tthis.projects = {};\n\t}\n\n\t/**\n\t * Enables project by name\n\t * @param {string} name\n\t */\n\tenable(name) {\n\t\tutils.logger(logGroup, `project ${name} enabled`);\n\t\tthis.projects[name] = true;\n\t}\n\n\t/**\n\t * Checks whether project is enabled\n\t * @param {string} name\n\t * @returns {boolean}\n\t */\n\tisEnabled(name) {\n\t\treturn !!this.projects[name];\n\t}\n\n\t/**\n\t * Returns all geo-enabled models' definitions based on enabled projects\n\t * @param {string[]} projectNames\n\t * @returns {{models: ModelDefinition[], parameters: Object}}\n\t */\n\tgetEnabledModelsWithParams(projectNames) {\n\t\tconst projects = context.get('services.billTheLizard.projects');\n\t\tconst projectParameters = context.get('services.billTheLizard.parameters');\n\t\tconst enabledProjectNames = Object.keys(projects)\n\t\t\t.filter(name => (this.isEnabled(name) && projectNames.includes(name)));\n\t\tconst models = [];\n\t\tconst parameters = {};\n\n\t\tenabledProjectNames.forEach((name) => {\n\t\t\t// Only first enabled model in project is executable\n\t\t\tlet isNextModelExecutable = true;\n\n\t\t\tprojects[name].forEach((model) => {\n\t\t\t\tif (utils.isProperGeo(model.countries, model.name)) {\n\t\t\t\t\tmodel.executable = isNextModelExecutable;\n\t\t\t\t\tisNextModelExecutable = false;\n\t\t\t\t\tmodels.push(model);\n\t\t\t\t\tObject.assign(parameters, projectParameters[name]);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.executable = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tmodels,\n\t\t\tparameters\n\t\t};\n\t}\n}\n","import { context, events, utils } from '@wikia/ad-engine';\nimport { Executor } from './executor';\nimport { ProjectsHandler } from './projects-handler';\n\n/**\n * @typedef {Object} ModelDefinition\n * @property {boolean|undefined} executable\n * @property {string[]} countries\n * @property {string} name\n * @property {function} on_*\n */\n\nconst logGroup = 'bill-the-lizard';\n\nevents.registerEvent('BILL_THE_LIZARD_REQUEST');\n\n/**\n * Builds query parameters for url\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @returns {string}\n */\nfunction buildQueryUrl(queryParameters) {\n\tconst params = [];\n\n\tObject.keys(queryParameters).forEach((key) => {\n\t\tparams.push(`${key}=${queryParameters[key]}`);\n\t});\n\n\treturn encodeURI(params.join('&'));\n}\n\n/**\n * Builds endpoint url\n * @param {string} host\n * @param {string} endpoint\n * @param {string} query\n * @returns {string}\n */\nfunction buildUrl(host, endpoint, query) {\n\treturn `${host}/${endpoint}?${query}`;\n}\n\n/**\n * Requests service\n * @param {string} host\n * @param {string} endpoint\n * @param {Object} queryParameters (key-value pairs for query parameters)\n * @param {number} timeout\n * @returns {Promise}\n */\nfunction httpRequest(host, endpoint, queryParameters = {}, timeout = 0) {\n\tconst request = new window.XMLHttpRequest();\n\tconst query = buildQueryUrl(queryParameters);\n\tconst url = buildUrl(host, endpoint, query);\n\n\tevents.emit(events.BILL_THE_LIZARD_REQUEST, query);\n\n\trequest.open('GET', url, true);\n\trequest.responseType = 'json';\n\trequest.timeout = timeout;\n\n\tutils.logger(logGroup, 'timeout configured to', request.timeout);\n\n\treturn new Promise((resolve, reject) => {\n\t\trequest.addEventListener('timeout', () => {\n\t\t\treject(new Error('timeout'));\n\t\t\tutils.logger(logGroup, 'timed out');\n\t\t});\n\t\trequest.addEventListener('error', () => {\n\t\t\treject(new Error('error'));\n\t\t\tutils.logger(logGroup, 'errored');\n\t\t});\n\t\trequest.onreadystatechange = function () {\n\t\t\tif (this.readyState === 4 && this.status === 200) {\n\t\t\t\tutils.logger(logGroup, 'has response');\n\t\t\t\tresolve(this.response);\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n/**\n * Builds key-value pairs for query parameters\n * @param {ModelDefinition[]} models\n * @param {Object} parameters (key-value pairs)\n * @returns {Object}\n */\nfunction getQueryParameters(models, parameters) {\n\tconst now = new Date();\n\tconst day = now.getDay() - 1;\n\n\treturn Object.assign({}, {\n\t\tmodels: models.map(model => model.name),\n\t\th: now.getHours(),\n\t\tdow: day === -1 ? 6 : day\n\t}, parameters);\n}\n\n/**\n * Overrides predictions based on response\n * @param {Object} response\n * @returns {Object}\n */\nfunction overridePredictions(response) {\n\tObject.keys(response).forEach((name) => {\n\t\tconst newValue = utils.queryString.get(`bill.${name}`);\n\n\t\tif (newValue) {\n\t\t\tresponse[name].result = parseInt(newValue, 10);\n\t\t}\n\t});\n\n\treturn response;\n}\n\n/**\n * Bill the Lizard service handler\n */\nclass BillTheLizard {\n\tstatic FAILURE = 'failure';\n\tstatic NOT_USED = 'not_used';\n\tstatic ON_TIME = 'on_time';\n\tstatic TIMEOUT = 'timeout';\n\tstatic TOO_LATE = 'too_late';\n\n\tconstructor() {\n\t\tthis.executor = new Executor();\n\t\tthis.projectsHandler = new ProjectsHandler();\n\t\tthis.predictions = {};\n\t\tthis.status = null;\n\t}\n\n\t/**\n\t * Requests service, executes defined methods and parses response\n\t * @param {string[]} projectNames\n\t * @returns {Promise}\n\t */\n\tcall(projectNames) {\n\t\tif (!context.get('services.billTheLizard.enabled')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\t\t\treturn new Promise((resolve, reject) => reject(new Error('Disabled')));\n\t\t}\n\n\t\tconst host = context.get('services.billTheLizard.host');\n\t\tconst endpoint = context.get('services.billTheLizard.endpoint');\n\t\tconst timeout = context.get('services.billTheLizard.timeout');\n\t\tconst { models, parameters } = this.projectsHandler.getEnabledModelsWithParams(projectNames);\n\n\t\tif (!models || models.length < 1) {\n\t\t\tutils.logger(logGroup, 'no models to predict');\n\t\t\tthis.status = BillTheLizard.NOT_USED;\n\n\t\t\treturn Promise.resolve({});\n\t\t}\n\n\t\tconst queryParameters = getQueryParameters(models, parameters);\n\t\tutils.logger(logGroup, 'calling service', host, endpoint, queryParameters);\n\n\t\tthis.status = BillTheLizard.TOO_LATE;\n\n\t\treturn httpRequest(host, endpoint, queryParameters, timeout)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.message === 'timeout') {\n\t\t\t\t\tthis.status = BillTheLizard.TIMEOUT;\n\t\t\t\t} else {\n\t\t\t\t\tthis.status = BillTheLizard.FAILURE;\n\t\t\t\t}\n\t\t\t\treturn Promise.reject(error);\n\t\t\t})\n\t\t\t.then(response => overridePredictions(response))\n\t\t\t.then((response) => {\n\t\t\t\tconst predictions = this.parsePredictions(models, response);\n\t\t\t\tthis.status = BillTheLizard.ON_TIME;\n\n\t\t\t\tthis.executor.executeMethods(models, response);\n\n\t\t\t\treturn predictions;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tutils.logger(logGroup, 'service response', error.message);\n\t\t\t\treturn {};\n\t\t\t});\n\t}\n\n\t/**\n\t * Parses predictions based on response\n\t * @param {ModelDefinition[]} models\n\t * @param {Object} response\n\t * @returns {Object}\n\t */\n\tparsePredictions(models, response) {\n\t\tconst targeting = [];\n\t\tthis.predictions = {};\n\n\t\tObject.keys(response).forEach((key) => {\n\t\t\tconst model = models.find(definition => definition.name === key);\n\t\t\tconst { result, version } = response[key];\n\t\t\tconst suffix = key.indexOf(version) > 0 ? '' : `:${version}`;\n\n\t\t\tif (typeof result !== 'undefined') {\n\t\t\t\tthis.predictions[`${key}${suffix}`] = result;\n\n\t\t\t\tif (model && model.dfp_targeting) {\n\t\t\t\t\ttargeting.push(`${key}${suffix}_${result}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (targeting.length > 0) {\n\t\t\tcontext.set('targeting.btl', targeting);\n\t\t}\n\n\t\tutils.logger(logGroup, 'predictions', this.predictions);\n\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns prediction for given model name\n\t * @param {string} modelName\n\t * @returns {number|undefined}\n\t */\n\tgetPrediction(modelName) {\n\t\treturn this.predictions[modelName];\n\t}\n\n\t/**\n\t * Returns all (parsed) predictions\n\t * @returns {Object}\n\t */\n\tgetPredictions() {\n\t\treturn this.predictions;\n\t}\n\n\t/**\n\t * Returns response status (one of: failure, not_used, on_time, timeout, too_late)\n\t * @returns {null|string}\n\t */\n\tgetResponseStatus() {\n\t\treturn this.status;\n\t}\n\n\t/**\n\t * Serializes all predictions\n\t * @returns {string}\n\t */\n\tserialize() {\n\t\treturn Object.keys(this.predictions).map(key => `${key}=${this.predictions[key]}`).join(';');\n\t}\n}\n\nexport const billTheLizard = new BillTheLizard();\n","import { context, utils } from '@wikia/ad-engine';\n\nconst logGroup = 'krux';\n\n/**\n * Injects Krux script\n * @returns {Promise}\n */\nfunction loadScript() {\n\tconst firstScript = document.getElementsByTagName('script')[0];\n\tconst kruxId = context.get('services.krux.id');\n\tconst kruxScript = document.createElement('script');\n\n\treturn new Promise((resolve) => {\n\t\tkruxScript.type = 'text/javascript';\n\t\tkruxScript.id = 'krux-control-tag';\n\t\tkruxScript.async = true;\n\t\tkruxScript.onload = resolve;\n\t\tkruxScript.src = `//cdn.krxd.net/controltag?confid=${kruxId}`;\n\t\tfirstScript.parentNode.insertBefore(kruxScript, firstScript);\n\t});\n}\n\n/**\n * Gets Krux data from localStorage\n * @param {string} key\n * @returns {string}\n */\nfunction getKruxData(key) {\n\tif (window.localStorage) {\n\t\treturn window.localStorage[key];\n\t} else if (window.navigator.cookieEnabled) {\n\t\tconst match = document.cookie.match(`${key}=([^;]*)`);\n\n\t\treturn (match && decodeURI(match[1])) || '';\n\t}\n\n\treturn '';\n}\n\nwindow.Krux = window.Krux || function (...args) {\n\twindow.Krux.q.push(args);\n};\nwindow.Krux.q = window.Krux.q || [];\n\n/**\n * Krux service handler\n */\nclass Krux {\n\t/**\n\t * Requests service, saves user id and segments in context and exports page level params\n\t * @returns {Promise}\n\t */\n\tcall() {\n\t\tif (!context.get('services.krux.enabled') || !context.get('options.trackingOptIn')) {\n\t\t\tutils.logger(logGroup, 'disabled');\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tutils.logger(logGroup, 'loading');\n\t\treturn loadScript().then(() => {\n\t\t\tthis.exportPageParams();\n\t\t\tthis.importUserData();\n\t\t});\n\t}\n\n\t/**\n\t * Export page level params to Krux\n\t * @returns {void}\n\t */\n\texportPageParams() {\n\t\tObject.keys(context.get('targeting')).forEach((key) => {\n\t\t\tconst value = context.get(`targeting.${key}`);\n\n\t\t\tif (value) {\n\t\t\t\twindow[`kruxDartParam_${key}`] = value;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Imports Krux data from localStorage\n\t * @returns {void}\n\t */\n\timportUserData() {\n\t\tconst user = getKruxData('kxuser');\n\t\tconst segments = getKruxData('kxsegs');\n\n\t\tcontext.set('targeting.kuid', user || null);\n\t\tcontext.set('targeting.ksg', segments ? segments.split(',') : []);\n\t\tutils.logger(logGroup, 'data set', user, segments);\n\t}\n\n\t/**\n\t * Returns Krux user ID\n\t * @returns {string}\n\t */\n\tgetUserId() {\n\t\treturn context.get('targeting.kuid') || null;\n\t}\n\n\t/**\n\t * Returns Krux segments\n\t * @returns {string[]}\n\t */\n\tgetSegments() {\n\t\treturn context.get('targeting.ksg') || [];\n\t}\n}\n\nexport const krux = new Krux();\n","export * from './bill-the-lizard';\nexport * from './krux';\n"],"sourceRoot":""}